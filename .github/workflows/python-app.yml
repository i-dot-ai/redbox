# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    paths:
      - redbox/**
      - embed/**
      - core_api/**
      - ingest/**
      - Makefile
      - .github/**
    branches:
      - 'main'
      - 'feature/**'
      - 'chore/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'dependabot/**'
      - 'develop'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  unit-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.7.0

    - name: Build Containers
      run: |
        mkdir -p data/elastic/
        chmod 777 data/elastic/
        cp .env.test .env
        docker compose up -d --wait elasticsearch minio rabbitmq

        poetry install --no-root --no-ansi --with dev --without ai,streamlit-app,api,worker,ingest
        poetry run download-model

    - name: Test redbox with pytest
      run: |
        make test-redbox

    - name: Test embed with pytest
      run: |
        make test-embed

    - name: Test ingest with pytest
      run: |
        make test-ingest

    - name: Test core with pytest
      run: |
        make test-core-api

  integration-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.7.0

    - name: Build Containers
      run: |
        mkdir -p data/elastic/
        chmod 777 data/elastic/
        cp .env.integration .env
        docker compose up -d --wait core-api embed ingest

        poetry install --no-root --no-ansi --with dev --without ai,streamlit-app,api,django-app,worker,ingest
        poetry run download-model

    - name: Test integration with pytest
      run: |
        make test-integration


  static_checks:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.7.0

    - name: Install dependencies
      run: |
        poetry install --no-root --no-ansi --only dev

    - name: Format code
      run: |
        make format

    - name: Type check
      run: |
        make checktypes
