
name: build
on:
  # On-demand
  workflow_dispatch:


jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      app-name: ${{ steps.export.outputs.app-name }}
      ec2-instance-type: ${{ steps.export.outputs.ec2-instance-type }}
      version: ${{ steps.export.outputs.version }}
      runner-size: ${{ steps.export.outputs.runner-size }}
      docker-build-instance: ${{ steps.export.outputs.docker-build-instance }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: export
        run: |
          . ./.github/.github.env
          echo "ec2-instance-type=${EC2_INSTANCE_TYPE}" >> $GITHUB_OUTPUT
          echo "app-name=${APP_NAME}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "runner-size=${RUNNER_SIZE}" >> $GITHUB_OUTPUT
          echo "docker-build-instance=${DOCKER_BUILD_INSTANCE}" >> $GITHUB_OUTPUT

  start-runner:
    uses: i-dot-ai/i-dot-ai-core-github-actions/.github/workflows/start-runner.yml@feature/runner-efs
    needs: set-vars
    with:
        EC2_INSTANCE_TYPE: ${{ needs.set-vars.outputs.ec2-instance-type }}
        RUNNER_SIZE: ${{ needs.set-vars.outputs.runner-size }}
        ENVIRONMENT: dev
    secrets:
        AWS_GITHUBRUNNER_USER_ACCESS_KEY: ${{ secrets.AWS_GITHUBRUNNER_USER_ACCESS_KEY }}
        AWS_GITHUBRUNNER_USER_SECRET_ID: ${{ secrets.AWS_GITHUBRUNNER_USER_SECRET_ID }}
        AWS_GITHUBRUNNER_PAT: ${{ secrets.AWS_GITHUBRUNNER_PAT}}
        AWS_REGION: ${{ secrets.AWS_REGION }}

  build-image:
    strategy:
      matrix:
        service: [django-app, core-api, worker]
    needs:
      - set-vars
      - start-runner
    uses: i-dot-ai/i-dot-ai-core-github-actions/.github/workflows/build-docker.yml@feature/runner-efs
    with:
      APP_NAME: ${{ needs.set-vars.outputs.app-name }}
      RUNNER_LABEL: ${{ needs.start-runner.outputs.label }}
      INFRASTRUCTURE_FOLDER: "infrastructure/aws"
      DOCKER_BUILD_INSTANCE: ${{ needs.set-vars.outputs.docker-build-instance }}
      SERVICE: ${{ matrix.service }}
      ENVIRONMENT: dev
    secrets:
      AWS_GITHUBRUNNER_PAT: ${{ secrets.AWS_GITHUBRUNNER_PAT}}
      AWS_GITHUBRUNNER_PAT_USER: ${{ secrets.AWS_GITHUBRUNNER_PAT_USER }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  stop-runner:
    uses: i-dot-ai/i-dot-ai-core-github-actions/.github/workflows/stop-runner.yml@feature/runner-efs
    if: needs.start-runner.outputs.use-persisted == 0 && always()
    needs:
        - set-vars
        - start-runner
        - build-image
    with:
        RUNNER_LABEL: ${{ needs.start-runner.outputs.label }}
        EC2_INSTANCE_ID: ${{ needs.start-runner.outputs.ec2-instance-id }}
    secrets:
        AWS_GITHUBRUNNER_USER_ACCESS_KEY: ${{ secrets.AWS_GITHUBRUNNER_USER_ACCESS_KEY }}
        AWS_GITHUBRUNNER_USER_SECRET_ID: ${{ secrets.AWS_GITHUBRUNNER_USER_SECRET_ID }}
        AWS_GITHUBRUNNER_PAT: ${{ secrets.AWS_GITHUBRUNNER_PAT}}
        AWS_REGION: ${{ secrets.AWS_REGION }}
