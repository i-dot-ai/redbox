services:
  django-app:
    image: django-app:latest
    build:
      context: .
      dockerfile: ./django_app/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      litellm:
        condition: service_started
    networks:
      - redbox-app-network
    env_file:
      - path: tests/.env.integration
        required: false
      - path: .env
        required: false
    volumes:
      - /app/django_app/frontend/node_modules
      - ./django_app:/app/django_app/
    ports:
      - "8090:8090"
    healthcheck:
      test: curl --fail http://localhost:8090/health/ || exit 1
      interval: 5s
      timeout: 30s
      retries: 24
      start_period: 60s
  lit-ssr:
    image: lit-ssr:latest
    build:
      context: .
      dockerfile: ./lit_ssr/Dockerfile
    user: "node"
    networks:
      - redbox-app-network
    ports:
      - "3002:3002"
    restart: unless-stopped
    env_file:
      - path: .env
        required: false
  db:
    image: postgres:13
    env_file:
      - path: tests/.env.integration
        required: false
      - path: .env
        required: false
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
    networks:
      - redbox-app-network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "redbox-core", "-d", "db_prod" ]
      interval: 5s
      timeout: 30s
      retries: 24
      start_period: 30s
  requirements:
    image: python:3.12
    profiles:
      - utils
    volumes:
      - ./:/app/:z
  worker:
    image: redbox-worker:latest
    build:
      context: .
      dockerfile: django_app/Dockerfile
    command: "venv/bin/django-admin qcluster"
    env_file:
      - path: tests/.env.integration
        required: false
      - path: .env
        required: false
    depends_on:
      minio:
        condition: service_healthy
      django-app:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - redbox-app-network
    restart: unless-stopped
  minio:
    image: minio/minio
    expose:
      - "9000"
      - "9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: server --console-address ":9001" /data
    networks:
      - redbox-app-network
    volumes:
      - ./data/objectstore:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 30s
      retries: 24
      start_period: 30s

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    env_file: .env
    volumes:
      - ./litellm_proxy_config.yml:/app/config.yml
    networks:
      - redbox-app-network
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "4000:4000"
    command: --config /app/config.yml --detailed_debug

networks:
  redbox-app-network:
    driver: bridge

volumes:
  redbox-app-data:
  local_postgres_data: {}
