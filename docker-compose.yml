version: '3.7'
services:
  django-app:
    image: django-app:latest
    build:
      context: .
      dockerfile: ./django_app/docker/web/Dockerfile
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./:/app/:z
    ports:
      - "8090:8090"
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=redbox-core
      - POSTGRES_PASSWORD=insecure
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
    ports:
      - "5432:5432"
  requirements:
    image: python:3.11
    profiles:
      - utils
    volumes:
      - ./:/app/:z
  test:
    image: redbox-tests:latest
    build:
      context: .
      dockerfile: ./tests/Dockerfile
    env_file:
      - .env
    depends_on:
      - elasticsearch
    networks:
      - redbox-app-network
#    command: bash -c "sleep infinity"
  app:
    image: redbox-app:latest
    build:
      context: .
      dockerfile: ./legacy_app/Dockerfile
    env_file:
      - .env
    ports:
      - 8501:8501
    volumes:
      - ./data:/app/data:Z
    depends_on:
      - elasticsearch
      - minio
    links:
      - elasticsearch
      - minio
    networks:
      - redbox-app-network
  embed:
    image: redbox-embed:latest
    build:
      context: .
      dockerfile: ./app/workers/embed/Dockerfile
    ports:
      - 5000:5000
    env_file:
      - .env
    depends_on:
      - rabbitmq
    networks:
      - redbox-app-network
    restart: unless-stopped
  ingest:
    image: redbox-ingest:latest
    build:
      context: .
      dockerfile: ./app/workers/ingest/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - elasticsearch
      - minio
    networks:
      - redbox-app-network
    restart: unless-stopped
  core-api:
    image: redbox-core-api:latest
    build:
      context: .
      dockerfile: ./app/core_api/Dockerfile
    ports:
      - 5002:5002
    environment:
      - PORT=5002
    env_file:
      - .env
    networks:
      - redbox-app-network
    depends_on:
      - elasticsearch
      - minio
      - rabbitmq
    restart: unless-stopped
  minio:
    image: minio/minio
    expose:
      - "9000"
      - "9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: server --console-address ":9001" /data
    networks:
      - redbox-app-network
    volumes:
      - ./data/objectstore:/data
  miniocreatebuckets:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - redbox-app-network
    entrypoint: >
      /bin/sh -c " /usr/bin/mc alias set redbox http://minio:9000 minioadmin minioadmin; /usr/bin/mc mb redbox/redboxcore; /usr/bin/mc policy set public redbox/redboxcore; exit 0; "
  elasticsearch:
    image: elasticsearch:8.12.0
    volumes:
      - ./data/elastic/:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      # node.name: elasticsearch
      - ES_JAVA_OPTS=-Xms128m -Xmx128m
      # ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    networks:
      - redbox-app-network
    restart: unless-stopped
  kibana:
    image: kibana:8.12.0
    ports:
      - 5601:5601
    environment:
      # KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      # ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD:-}
      # ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      # XPACK_SECURITY_ENABLED: "false"
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: 19264f57-b71d-46e1-8f20-33be19131a6c
    networks:
      - redbox-app-network
    depends_on:
      - elasticsearch
    restart: unless-stopped
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - redbox-app-network
    volumes:
      - ./data/queue/data/:/var/lib/rabbitmq/
      - ./infra/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./infra/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    restart: unless-stopped

networks:
  redbox-app-network:
    driver: bridge

volumes:
  elasticsearch:
  redbox-app-data:
  local_postgres_data: {}
