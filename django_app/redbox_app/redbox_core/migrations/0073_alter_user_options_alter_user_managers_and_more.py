# Generated by Django 5.1.3 on 2024-11-27 11:09

import redbox_app.redbox_core.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("redbox_core", "0072_populate_username_values"),
    ]

    operations = [
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.EmailField(
                max_length=254, unique=True, default="default@default.com"
            ),
        ),
        migrations.AlterModelOptions(
            name="user",
            options={},
        ),
        migrations.AlterModelManagers(
            name="user",
            managers=[
                ("objects", redbox_app.redbox_core.models.SSOUserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name="user",
            name="date_joined",
        ),
        migrations.RemoveField(
            model_name="user",
            name="first_name",
        ),
        migrations.RemoveField(
            model_name="user",
            name="last_name",
        ),
        migrations.AlterField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                related_name="sso_user_set",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_staff",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_superuser",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                related_name="sso_user_set",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
