# Generated by Django 5.1.3 on 2025-01-07 13:37
from collections import defaultdict

from django.db import migrations, models

def remove_duplicate_citations(apps, schema_editor):
    Citation = apps.get_model("redbox_core", "Citation")

    duplicates = defaultdict(list)
    for citation in Citation.objects.all():
        duplicates[(citation.file_id, citation.chat_message_id)].append(citation.id)


    # Step 2: Remove duplicates
    for ids in duplicates.values():
        if len(ids) > 1:
            # Keep the first, delete the rest
            # ids[0] is retained, ids[1:] are deleted
            Citation.objects.filter(id__in=ids[1:]).delete()

def back_populate_new_source_files(apps, schema_editor):
    ChatMessage = apps.get_model("redbox_core", "ChatMessage")
    for chat_message in ChatMessage.objects.all():
        for source_file in chat_message.source_files.all():
            chat_message.new_source_files.add(source_file)


class Migration(migrations.Migration):

    dependencies = [
        ('redbox_core', '0072_delete_activityevent'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_citations, migrations.RunPython.noop),
        migrations.AddField(
            model_name='chatmessage',
            name='new_source_files',
            field=models.ManyToManyField(related_name='source_files', to='redbox_core.file'),
        ),
        migrations.RunPython(back_populate_new_source_files, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='chatmessage',
            name='source_files',
        ),
        migrations.RenameField(
            model_name='chatmessage',
            old_name='new_source_files',
            new_name='source_files',
        ),
        migrations.AlterField(
            model_name='chatmessage',
            name='source_files',
            field=models.ManyToManyField(related_name='+', to='redbox_core.file'),
        ),
    ]
