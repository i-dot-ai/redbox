{"mappings":"I,E,E,E,E,E,C,E,E,C,E,O,E,C,E,Y,iB,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECGA,IAAI,EAAW,OAAO,QAAW,AAE1B,OAAM,UAA0B,YAKrC,OAAO,CAAQ,CAAE,CACf,IAAI,EAAY,IAAI,EAAS,SAAS,CAAC,CACrC,qCAAsC,CAAA,EACtC,iBAAkB,EAClB,OAAQ,CAAA,CACV,EACA,CAAA,IAAI,CAAC,SAAS,CAAG,EAAU,QAAQ,CAAC,EACtC,CAEA,mBAAoB,CAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAI,GAClC,CACF,CACA,eAAe,MAAM,CAAC,qBAAsB,E,G,E","sources":["<anon>","src/js/web-components/markdown-converter.js","src/js/citations.js"],"sourcesContent":["(() => {\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"7PjHo\", function(module, exports) {\n// @ts-check\n/** @type {import ('showdown')} */ let $5b2c93a1b6249a89$var$showdown = window[\"showdown\"];\nclass $5b2c93a1b6249a89$export$d1a54e697d9f304d extends HTMLElement {\n    /**\n   * Takes markdown and inserts as HTML\n   * @param {string} markdown\n   */ update(markdown) {\n        let converter = new $5b2c93a1b6249a89$var$showdown.Converter({\n            disableForced4SpacesIndentedSublists: true,\n            headerLevelStart: 3,\n            tables: true\n        });\n        this.innerHTML = converter.makeHtml(markdown);\n    }\n    connectedCallback() {\n        this.update(this.textContent || \"\");\n    }\n}\ncustomElements.define(\"markdown-converter\", $5b2c93a1b6249a89$export$d1a54e697d9f304d);\n\n});\n\nparcelRequire(\"7PjHo\");\n\n})();\n//# sourceMappingURL=citations.js.map\n","// @ts-check\n\n/** @type {import ('showdown')} */\nlet showdown = window[\"showdown\"];\n\nexport class MarkdownConverter extends HTMLElement {\n  /**\n   * Takes markdown and inserts as HTML\n   * @param {string} markdown\n   */\n  update(markdown) {\n    let converter = new showdown.Converter({\n      disableForced4SpacesIndentedSublists: true,\n      headerLevelStart: 3,\n      tables: true,\n    });\n    this.innerHTML = converter.makeHtml(markdown);\n  }\n\n  connectedCallback() {\n    this.update(this.textContent || \"\");\n  }\n}\ncustomElements.define(\"markdown-converter\", MarkdownConverter);\n","import \"./web-components/markdown-converter.js\";\n"],"names":["$parcel$global","$parcel$modules","$parcel$inits","parcelRequire","globalThis","id","exports","init","module","call","err","Error","code","register","parcelRegister","$5b2c93a1b6249a89$var$showdown","window","$5b2c93a1b6249a89$export$d1a54e697d9f304d","HTMLElement","update","markdown","converter","Converter","disableForced4SpacesIndentedSublists","headerLevelStart","tables","innerHTML","makeHtml","connectedCallback","textContent","customElements","define"],"version":3,"file":"citations.js.map"}