{"mappings":"A,C,K,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECEA,MAAM,UAAuB,YAC3B,mBAAoB,CAClB,IAAI,CAAC,SAAS,CAAG;AAC2C,gEAAA,EACxD,IAAI,CAAC,OAAO,CAAC,aAAa,EAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAI,UACvD;AACC,QAAA,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAI;A;A;A;A;AAK9B,IAAA,CAAC,AACH,CACF,CACA,eAAe,MAAM,CAAC,kBAAmB,E,G,E,QEXzC,OAAM,UAAqB,YACzB,mBAAoB,CAClB,IAAI,CAAC,OAAO,CAAC,SAAS,iBAAiB,SAAU,KAC/C,IAAI,CAAC,aAAa,CAAC,WAAW,SAC9B,IAAI,EAAK,SAAS,aAAa,CAAC,kBAChC,CAAA,EAAG,OAAO,CAAC,OAAO,CAAG,YACrB,IAAI,CAAC,WAAW,CAAC,GACjB,IAAI,CAAC,YAAY,CAAC,WAAY,MAC9B,IAAI,CAAC,KAAK,EACZ,EACF,CACF,CACA,eAAe,MAAM,CAAC,gBAAiB,E,C","sources":["<anon>","src/js/web-components/loading-message.js","src/js/document-upload.js","src/js/web-components/documents/upload-button.js"],"sourcesContent":["(() => {\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"795Or\", function(module, exports) {\n// @ts-check\nclass $533de1f10e763f67$var$LoadingMessage extends HTMLElement {\n    connectedCallback() {\n        this.innerHTML = `\n      <div class=\"rb-loading-ellipsis govuk-body-s\" aria-label=\"${this.dataset.dataAriaLabel || this.dataset.message || \"Loading\"}\">\n        ${this.dataset.message || \"Loading\"}\n        <span aria-hidden=\"true\">.</span>\n        <span aria-hidden=\"true\">.</span>\n        <span aria-hidden=\"true\">.</span>\n      </div>\n    `;\n    }\n}\ncustomElements.define(\"loading-message\", $533de1f10e763f67$var$LoadingMessage);\n\n});\n\n// @ts-check\nparcelRequire(\"795Or\");\n/** So completed docs can be added to this list */ class $14ba891a2ca268fd$var$UploadButton extends HTMLElement {\n    connectedCallback() {\n        this.closest(\"form\")?.addEventListener(\"submit\", ()=>{\n            this.querySelector(\"button\")?.remove();\n            let el = document.createElement(\"loading-message\");\n            el.dataset.message = \"Uploading\";\n            this.appendChild(el);\n            this.setAttribute(\"tabindex\", \"-1\");\n            this.focus();\n        });\n    }\n}\ncustomElements.define(\"upload-button\", $14ba891a2ca268fd$var$UploadButton);\n\n\n\n})();\n//# sourceMappingURL=document-upload.js.map\n","// @ts-check\n\nclass LoadingMessage extends HTMLElement {\n  connectedCallback() {\n    this.innerHTML = `\n      <div class=\"rb-loading-ellipsis govuk-body-s\" aria-label=\"${\n        this.dataset.dataAriaLabel || this.dataset.message || \"Loading\"\n      }\">\n        ${this.dataset.message || \"Loading\"}\n        <span aria-hidden=\"true\">.</span>\n        <span aria-hidden=\"true\">.</span>\n        <span aria-hidden=\"true\">.</span>\n      </div>\n    `;\n  }\n}\ncustomElements.define(\"loading-message\", LoadingMessage);\n","import \"./web-components/documents/upload-button.js\";\n","// @ts-check\n\nimport \"../loading-message.js\";\n\n/** So completed docs can be added to this list */\nclass UploadButton extends HTMLElement {\n  connectedCallback() {\n    this.closest(\"form\")?.addEventListener(\"submit\", () => {\n      this.querySelector(\"button\")?.remove();\n      let el = document.createElement(\"loading-message\");\n      el.dataset.message = \"Uploading\";\n      this.appendChild(el);\n      this.setAttribute(\"tabindex\", \"-1\");\n      this.focus();\n    });\n  }\n}\ncustomElements.define(\"upload-button\", UploadButton);\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$533de1f10e763f67$var$LoadingMessage","HTMLElement","connectedCallback","innerHTML","dataset","dataAriaLabel","message","customElements","define","$14ba891a2ca268fd$var$UploadButton","closest","addEventListener","querySelector","remove","el","document","createElement","appendChild","setAttribute","focus"],"version":3,"file":"document-upload.js.map"}